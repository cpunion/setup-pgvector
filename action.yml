name: 'Setup pgvector'
description: 'Setup pgvector extension for PostgreSQL'
inputs:
  postgres-version:
    description: 'PostgreSQL version to use'
    required: false
    default: '17'
  pgvector-version:
    description: 'pgvector version to install'
    required: false
    default: '0.8.0'
runs:
  using: "composite"
  steps:
    - name: Install pgvector on Ubuntu
      if: runner.os == 'Linux'
      shell: bash
      run: |
        echo "Checking PostgreSQL installation..."
        ls -la /usr/share/postgresql/
        
        # Get the actual PostgreSQL version
        pg_version=$(psql --version | awk '{print $3}' | cut -d. -f1)
        echo "Current PostgreSQL version: $pg_version"
        echo "Target version: ${{ inputs.postgres-version }}"
        
        # Install PostgreSQL of the specified version
        sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y
        sudo apt-get update
        sudo apt-get install -y postgresql-${{ inputs.postgres-version }}
        
        # Stop PostgreSQL service to switch version
        sudo systemctl stop postgresql
        
        # Update alternatives to use the correct version
        sudo update-alternatives --set postgresql /usr/lib/postgresql/${{ inputs.postgres-version }}/bin/postgres
        
        # Start PostgreSQL with the new version
        sudo systemctl start postgresql
        
        # Verify the running version
        pg_version=$(psql --version | awk '{print $3}' | cut -d. -f1)
        echo "PostgreSQL version after update: $pg_version"
        
        echo "Installing pgvector..."
        sudo apt-get install -y postgresql-${{ inputs.postgres-version }}-pgvector
        # If package not available, build from source
        if [ $? -ne 0 ]; then
          echo "Package postgresql-${{ inputs.postgres-version }}-pgvector not available, building from source..."
          sudo apt-get install -y postgresql-server-dev-${{ inputs.postgres-version }} build-essential git
          git clone --branch v${{ inputs.pgvector-version }} https://github.com/pgvector/pgvector.git
          cd pgvector
          make
          sudo make install PG_CONFIG=/usr/lib/postgresql/${{ inputs.postgres-version }}/bin/pg_config
          cd ..
          rm -rf pgvector
        fi
        
        echo "Checking installed PostgreSQL extensions directory:"
        ls -la /usr/share/postgresql/${{ inputs.postgres-version }}/extension/
        echo "Checking pgvector installation:"
        find /usr -name "vector.control" 2>/dev/null
        
        # Restart PostgreSQL to ensure it picks up the new extension
        sudo systemctl restart postgresql

    - name: Install pgvector on macOS
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install pgvector

    - name: Install PostgreSQL on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        choco install postgresql${{ inputs.postgres-version }} --params '/Password:postgres'
        $pgPath = "C:\Program Files\PostgreSQL\${{ inputs.postgres-version }}"
        echo "$pgPath\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "$pgPath\lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        refreshenv

    - name: Install pgvector on Windows 2022
      if: runner.os == 'Windows' && matrix.os != 'windows-2019'
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cd %TEMP%
        git clone --branch v${{ inputs.pgvector-version }} https://github.com/pgvector/pgvector.git
        cd pgvector
        set PATH=C:\Program Files\PostgreSQL\${{ inputs.postgres-version }}\bin;C:\Program Files\PostgreSQL\${{ inputs.postgres-version }}\lib;%PATH%
        nmake /NOLOGO /F Makefile.win
        nmake /NOLOGO /F Makefile.win install

    - name: Install pgvector on Windows 2019
      if: runner.os == 'Windows' && matrix.os == 'windows-2019'
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        cd %TEMP%
        git clone --branch v${{ inputs.pgvector-version }} https://github.com/pgvector/pgvector.git
        cd pgvector
        set PATH=C:\Program Files\PostgreSQL\${{ inputs.postgres-version }}\bin;C:\Program Files\PostgreSQL\${{ inputs.postgres-version }}\lib;%PATH%
        nmake /NOLOGO /F Makefile.win
        nmake /NOLOGO /F Makefile.win install

    - name: Start PostgreSQL Service on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Start-Service postgresql-x64-${{ inputs.postgres-version }}
        Start-Sleep -s 3  # Wait for PostgreSQL to start
